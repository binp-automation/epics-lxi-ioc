#
# Simple database and stream protocol file for Keysight DSOX2024A Oscilloscope
#

#
# Basic operations
#

record(stringin, "$(P):$(R):IDN")
{
    field(DESC, "identification string")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto getIDN() $(PORT) $(A)")
}

record(bo, "$(P):$(R):RST")
{
    field(DESC, "reset")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto cmd(*RST) $(PORT) $(A)")
}

record(bo, "$(P):$(R):CLS")
{
    field(DESC, "clear status")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto cmd(*CLS) $(PORT) $(A)")
}

#
# Device setup
#

record(seq, "$(P):$(R):STARTUP")
{
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(P):$(R):RST PP")
    field(LNK2, "$(P):$(R):SETUP_CHAN:1 PP")
    field(LNK3, "$(P):$(R):SETUP_CHAN:2 PP")
    field(LNK4, "$(P):$(R):SETUP_CHAN:3 PP")
    field(LNK5, "$(P):$(R):SETUP_CHAN:4 PP")
    field(LNK6, "$(P):$(R):SETUP_TIM PP")
    field(LNK7, "$(P):$(R):SETUP_OTHER PP")
    field(LNK8, "$(P):$(R):IDN PP")
    field(LNK9, "$(P):$(R):RUN PP")
    field(PINI, "YES")
}

record(calcout, "$(P):$(R):SETUP_CHAN:1")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INPA, "$(P):$(R):SCAL:1")
    field(INPB, "$(P):$(R):OFFS:1")
    field(CALC, "0")
    field(OUT, "@devFC.proto setup_chan(1) $(PORT) $(A)")
}

record(calcout, "$(P):$(R):SETUP_CHAN:2")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INPA, "$(P):$(R):SCAL:2")
    field(INPB, "$(P):$(R):OFFS:2")
    field(CALC, "0")
    field(OUT, "@devFC.proto setup_chan(2) $(PORT) $(A)")
}

record(calcout, "$(P):$(R):SETUP_CHAN:3")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INPA, "$(P):$(R):SCAL:3")
    field(INPB, "$(P):$(R):OFFS:3")
    field(CALC, "0")
    field(OUT, "@devFC.proto setup_chan(3) $(PORT) $(A)")
}

record(calcout, "$(P):$(R):SETUP_CHAN:4")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INPA, "$(P):$(R):SCAL:4")
    field(INPB, "$(P):$(R):OFFS:4")
    field(CALC, "0")
    field(OUT, "@devFC.proto setup_chan(4) $(PORT) $(A)")
}

record(calcout, "$(P):$(R):SETUP_TIM")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INPA, "$(P):$(R):TIMSCAL")
    field(INPB, "$(P):$(R):TIMPOS")
    field(CALC, "0")
    field(OUT, "@devFC.proto setup_tim() $(PORT) $(A)")
}

record(bo, "$(P):$(R):SETUP_OTHER")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto setup_other() $(PORT) $(A)")
}

#
# Set/get measure parameters
#

record(ao, "$(P):$(R):SCAL:1")
{
    field(SCAN, "Passive")
    field(VAL,  "1.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:1")
}

record(ao, "$(P):$(R):OFFS:1")
{
    field(SCAN, "Passive")
    field(VAL,  "0.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:1")
}

record(ao, "$(P):$(R):SCAL:2")
{
    field(SCAN, "Passive")
    field(VAL,  "1.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:2")
}

record(ao, "$(P):$(R):OFFS:2")
{
    field(SCAN, "Passive")
    field(VAL,  "0.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:2")
}

record(ao, "$(P):$(R):SCAL:3")
{
    field(SCAN, "Passive")
    field(VAL,  "1.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:3")
}

record(ao, "$(P):$(R):OFFS:3")
{
    field(SCAN, "Passive")
    field(VAL,  "0.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:3")
}

record(ao, "$(P):$(R):SCAL:4")
{
    field(SCAN, "Passive")
    field(VAL,  "1.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:4")
}

record(ao, "$(P):$(R):OFFS:4")
{
    field(SCAN, "Passive")
    field(VAL,  "0.0")
    field(FLNK, "$(P):$(R):SETUP_CHAN:4")
}

record(ao, "$(P):$(R):TIMSCAL")
{
    field(SCAN, "Passive")
    field(VAL,  "1e-6")
    field(FLNK, "$(P):$(R):SETUP_TIM")
}

record(ao, "$(P):$(R):TIMPOS")
{
    field(SCAN, "Passive")
    field(VAL,  "0.0")
    field(FLNK, "$(P):$(R):SETUP_TIM")
}

#
# Run measure process
#

record(seq, "$(P):$(R):RUN")
{
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(P):$(R):DIG PP")
    field(LNK2, "$(P):$(R):WAVSOUR:1 PP")
    field(DOL2, "1")
    field(LNK3, "$(P):$(R):TRIG_WAIT PP")
}

record(bo, "$(P):$(R):DIG")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto cmd(:DIG) $(PORT) $(A)")
}

#
# Set/get waveform source
#

record(longout, "$(P):$(R):WAVSOUR:1")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto wavsour(1) $(PORT) $(A)")
}

record(longout, "$(P):$(R):WAVSOUR:2")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto wavsour(2) $(PORT) $(A)")
}

record(longout, "$(P):$(R):WAVSOUR:3")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto wavsour(3) $(PORT) $(A)")
}

record(longout, "$(P):$(R):WAVSOUR:4")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto wavsour(4) $(PORT) $(A)")
}

#
# Trigger event
#

record(bo, "$(P):$(R):TRIG_WAIT")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devFC.proto trig_wait() $(PORT) $(A)")
}

record(longin, "$(P):$(R):CHAN_TRIG")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto chan_trig() $(PORT) $(A)")
    field(FLNK, "$(P):$(R):READY")
}

#
# Get data from channels
#

record(calcout, "$(P):$(R):READY")
{
    field(SCAN, "Passive")
    field(INPA, "$(P):$(R):CHAN_TRIG")
    field(CALC, "A = 1")
    field(OUT,  "$(P):$(R):FETCH:1 PP")
    field(DOPT, "Use CALC")
    field(OEVT, "1")
}

record(seq, "$(P):$(R):FETCH:1")
{
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(P):$(R):WAVSOUR:1 PP")
    field(LNK2, "$(P):$(R):WAVDATA:1 PP")
    field(LNK3, "$(P):$(R):WAVPRE:1 PP")
    field(LNK4, "$(P):$(R):FETCH:2 PP")
}

record(seq, "$(P):$(R):FETCH:2")
{
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(P):$(R):WAVSOUR:2 PP")
    field(LNK2, "$(P):$(R):WAVDATA:2 PP")
    field(LNK3, "$(P):$(R):WAVPRE:2 PP")
    field(LNK4, "$(P):$(R):FETCH:3 PP")
}

record(seq, "$(P):$(R):FETCH:3")
{
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(P):$(R):WAVSOUR:3 PP")
    field(LNK2, "$(P):$(R):WAVDATA:3 PP")
    field(LNK3, "$(P):$(R):WAVPRE:3 PP")
    field(LNK4, "$(P):$(R):FETCH:4 PP")
}

record(seq, "$(P):$(R):FETCH:4")
{
    field(SCAN, "Passive")
    field(SELM, "All")
    field(LNK1, "$(P):$(R):WAVSOUR:4 PP")
    field(LNK2, "$(P):$(R):WAVDATA:4 PP")
    field(LNK3, "$(P):$(R):WAVPRE:4 PP")
    field(LNK4, "$(P):$(R):RUN PP")
}

#
# Read waveform data
#

record(waveform, "$(P):$(R):WAVDATA:1")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavdata() $(PORT) $(A)")
    field(NELM, "1000")
    field(FTVL, "DOUBLE")
}


record(waveform, "$(P):$(R):WAVDATA:2")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavdata() $(PORT) $(A)")
    field(NELM, "1000")
    field(FTVL, "DOUBLE")
}

record(waveform, "$(P):$(R):WAVDATA:3")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavdata() $(PORT) $(A)")
    field(NELM, "1000")
    field(FTVL, "DOUBLE")
}

record(waveform, "$(P):$(R):WAVDATA:4")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavdata() $(PORT) $(A)")
    field(NELM, "1000")
    field(FTVL, "DOUBLE")
}

#
# Read waveform parameters
#

record(stringin, "$(P):$(R):WAVPRE:1")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavpre() $(PORT) $(A)")
}

record(stringin, "$(P):$(R):WAVPRE:2")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavpre() $(PORT) $(A)")
}

record(stringin, "$(P):$(R):WAVPRE:3")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavpre() $(PORT) $(A)")
}

record(stringin, "$(P):$(R):WAVPRE:4")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto wavpre() $(PORT) $(A)")
}

record(ai, "$(P):$(R):XINC")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto xinc_in() $(PORT) $(A)")
}

record(ai, "$(P):$(R):XORIG")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "stream")
    field(INP,  "@devFC.proto xorig_in() $(PORT) $(A)")
}

#record(ai, "$(P):$(R):YINC")
#{
#    field(SCAN, "I/O Intr")
#    field(DTYP, "stream")
#    field(INP,  "@devFC.proto yinc_in() $(PORT) $(A)")
#}

#record(ai, "$(P):$(R):YORIG")
#{
#    field(SCAN, "I/O Intr")
#    field(DTYP, "stream")
#    field(INP,  "@devFC.proto yorig_in() $(PORT) $(A)")
#}
